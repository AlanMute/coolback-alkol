basePath: /
definitions:
  core.Course:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  core.Lesson:
    properties:
      description:
        type: string
      id:
        type: integer
      moduleID:
        type: integer
      name:
        type: string
      orderID:
        type: integer
    type: object
  core.ModLes:
    properties:
      courseID:
        type: integer
      description:
        type: string
      id:
        type: integer
      lessons:
        items:
          $ref: '#/definitions/core.Lesson'
        type: array
      name:
        type: string
      orderID:
        type: integer
    type: object
  core.Tokens:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  handler.AddCourse:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  handler.AddLesson:
    properties:
      content:
        items:
          type: string
        type: array
      description:
        type: string
      module_id:
        type: integer
      name:
        type: string
      order_id:
        type: integer
    type: object
  handler.AddModule:
    properties:
      course_id:
        type: integer
      description:
        type: string
      name:
        type: string
      order_id:
        type: integer
    type: object
  handler.Delete:
    properties:
      id:
        type: integer
    type: object
  handler.EdLesson:
    properties:
      content:
        items:
          type: string
        type: array
      description:
        type: string
      name:
        type: string
      orderid:
        type: integer
    type: object
  handler.EdModule:
    properties:
      description:
        type: string
      name:
        type: string
      orderid:
        type: integer
    type: object
  handler.Email:
    properties:
      address:
        type: string
    type: object
  handler.Refresh:
    properties:
      refresh_token:
        type: string
    type: object
  handler.SignInput:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
host: 26.39.212.218:8000
info:
  contact:
    email: eptanit@gmail.com
  description: EptaNit Super Site
  title: eptanit.com
  version: "2.71"
paths:
  /adm/course/:
    delete:
      consumes:
      - application/json
      description: Delete Course by ID
      operationId: DeleteCourse
      parameters:
      - description: Course ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.Delete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: DeleteCourse
      tags:
      - course
    post:
      consumes:
      - application/json
      description: Add Course
      operationId: AddCourse
      parameters:
      - description: Add course
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.AddCourse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: AddCourse
      tags:
      - course
  /adm/course/{id}:
    put:
      consumes:
      - application/json
      description: Edit course by ID
      operationId: EditCourse
      parameters:
      - description: Идентификатор курса для обновления
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Course
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.AddCourse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: EditCourse
      tags:
      - course
  /adm/lesson/:
    delete:
      consumes:
      - application/json
      description: Delete lesson by ID
      operationId: DeleteLesson
      parameters:
      - description: Lesson ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.Delete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: DeleteLesson
      tags:
      - lesson
    post:
      consumes:
      - application/json
      description: Add lesson
      operationId: AddLesson
      parameters:
      - description: Add Lesson (OrderId starts with one)
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.AddLesson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: AddLesson
      tags:
      - lesson
  /adm/lesson/{id}:
    put:
      consumes:
      - application/json
      description: Edit lesson by ID
      operationId: EditLesson
      parameters:
      - description: Lesson ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Lesson (OrderId starts with one)
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.EdLesson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: EditLesson
      tags:
      - lesson
  /adm/module/:
    delete:
      consumes:
      - application/json
      description: Delete Module by ID
      operationId: DeleteModule
      parameters:
      - description: Module ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.Delete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: DeleteModule
      tags:
      - module
    post:
      consumes:
      - application/json
      description: Add Module
      operationId: AddModule
      parameters:
      - description: Add Module (OrderId starts with one)
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.AddModule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: AddModule
      tags:
      - module
  /adm/module/{id}:
    put:
      consumes:
      - application/json
      description: Edit module by ID
      operationId: EditModule
      parameters:
      - description: Module ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Module (OrderId starts with one)
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.EdModule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: EditModule
      tags:
      - module
  /course/{id}:
    get:
      consumes:
      - application/json
      description: Get courses by ID with all modules&lessons
      operationId: GetCourse
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Course'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: GetCourse
      tags:
      - course
  /course/getall:
    get:
      consumes:
      - application/json
      description: Get all courses
      operationId: GetAllCourses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Course'
        "500":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: All courses
      tags:
      - course
  /course/search/{name}:
    get:
      consumes:
      - application/json
      description: Get courses by name
      operationId: GetCourseByName
      parameters:
      - description: Имя курса для поиска
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Course'
        "500":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: Searching Courses
      tags:
      - course
  /lesson/{orderid}/{moduleid}:
    get:
      consumes:
      - application/json
      description: Get lesson by orderID
      operationId: GetLesson
      parameters:
      - description: Lesson sequence number
        in: path
        name: orderid
        required: true
        type: integer
      - description: Module ID
        in: path
        name: moduleid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.ModLes'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: GetLesson
      tags:
      - lesson
  /lesson/trial:
    post:
      consumes:
      - application/json
      description: Send email trial lesson
      operationId: SendTrialLesson
      parameters:
      - description: Recipient's e-mail
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.Email'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: SendLetter
      tags:
      - email
  /module/{id}:
    get:
      consumes:
      - application/json
      description: Get module by ID
      operationId: GetModule
      parameters:
      - description: Module ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.ModLes'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: GetModule
      tags:
      - module
  /refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token for Admin
      operationId: refresh
      parameters:
      - description: Refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.Refresh'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: Refresh Access Token
      tags:
      - auth
  /sign-in:
    post:
      consumes:
      - application/json
      description: login for admins
      operationId: login
      parameters:
      - description: admin info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.SignInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Tokens'
        "500":
          description: error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: SignInAdmin
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
